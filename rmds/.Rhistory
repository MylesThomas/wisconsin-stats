knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nflfastR)
library(nflfastR)
install.packages("nflfastR")
library(tidyverse)
library(nflfastR)
library(gt)
future::plan("multisession")
pbp <- nflfastR::load_pbp(1999:2020)
head(pbp, 10)
pbp_dp <- pbp %>%
filter(!is.na(passer)) %>%
filter(!is.na(epa)) %>%
filter(qb_dropback == 1)
head(pbp_dp, 5)
qb_stats <- pbp_dp %>%
group_by(passer, defteam) %>%
summarize(plays = n(),
epa_per_play = round(mean(epa), 3)) %>%
filter(plays >= 500) %>%
arrange(-epa_per_play) %>%
ungroup() %>%
mutate(rank = row_number()) %>%
filter(rank < 16) %>%
left_join(teams_colors_logos, by = c("defteam" = "team_abbr")) %>%
mutate(vs = "vs.") %>%
select(rank, passer, vs, team_wordmark, plays, epa_per_play)
qb_stats
pbp_dp
pbp
gt_theme_538 <- function(data,...) {
data %>%
opt_all_caps()  %>%
opt_table_font(
font = list(
google_font("Chivo"),
default_fonts()
)
) %>%
tab_style(
style = cell_borders(
sides = "bottom", color = "transparent", weight = px(2)
),
locations = cells_body(
columns = everything(),
# This is a relatively sneaky way of changing the bottom border
# Regardless of data size
rows = nrow(data$`_data`)
)
)  %>%
tab_options(
column_labels.background.color = "white",
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
data_row.padding = px(3),
source_notes.font.size = 12,
table.font.size = 16,
heading.align = "middle",
...
)}
qb_games <- qb_stats %>% gt() %>%
text_transform(
locations = cells_body(c(team_wordmark)),
fn = function(x){
web_image(
url = x,
height = px(35)
)
}
) %>%
cols_label(
rank = "Rank",
passer = "Quarterback",
vs = "",
team_wordmark = "Defense",
plays = "Plays",
epa_per_play = "EPA/Play") %>%
data_color(
columns = c(epa_per_play),
colors = scales::col_numeric(
palette = c("white", "#3fc1c9"),
domain = NULL
)
) %>%
tab_source_note(
source_note = md("By Tej Seth | @mfbanalytics <br>Inspiration: @thomas_mock")
) %>%
opt_align_table_header(align = "center") %>%
tab_header(
title = md("**The Top Quarterback Performances Against a Certain Defense**"),
subtitle = md("1999-2020, minimum of 500 plays against the same team")) %>%
opt_row_striping() %>%
gt_theme_538(table.width = px(550))
#gtsave(qb_games, "qb_games.png")
qb_games
install.packages('espnscrapeR')
# install.packages("remotes")
remotes::install_github("jthomasmock/espnscrapeR")
library(remotes)
install.packages('remotes')
# install.packages("remotes")
remotes::install_github("jthomasmock/espnscrapeR")
library(espnscrapeR)
games <- espnscrapeR::get_sharpe_data(dataset = "games")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
future::plan("multisession")
pbp <- nflfastR::load_pbp(2009:2020)
games <- espnscrapeR::get_sharpe_data(dataset = "games")
games <- games %>%
filter(season >= 2009) %>%
mutate(home_wins = case_when(
home_score > away_score ~ 1,
home_score == away_score ~ 0.5,
home_score < away_score ~ 0
),
away_wins = 1 - home_wins)
home_qbs <- games %>%
select(game_id, season, week, home_qb_name, home_team, home_wins) %>%
rename(qb_name = home_qb_name,
wins = home_wins,
team = home_team)
away_qbs <- games %>%
select(game_id, season, week, away_qb_name, away_team, away_wins) %>%
rename(qb_name = away_qb_name,
wins = away_wins,
team = away_team)
all_qbs <- rbind(home_qbs, away_qbs)
qb_win_perc <- all_qbs %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(games = n(),
win_perc = mean(wins)) %>%
filter(games >= 50) %>%
arrange(-win_perc)
rushing_stats <- pbp %>%
filter(rush == 1) %>%
group_by(game_id, posteam) %>%
summarize(rush_epa = mean(epa))
def_stats <- pbp %>%
group_by(game_id, defteam) %>%
summarize(def_epa = mean(epa))
all_stats <- rushing_stats %>%
left_join(def_stats, by = c("game_id", "posteam" = "defteam"))
all_stats <- all_stats %>%
mutate(total_help = rush_epa - def_epa) %>%
left_join(all_qbs, by = c("game_id", "posteam" = "team"))
total_help_stats <- all_stats %>%
filter(!is.na(total_help)) %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(avg_total_help = mean(total_help, na.rm = T))
qb_win_perc <- qb_win_perc %>%
left_join(total_help_stats, by = c("qb_name"))
qb_win_perc <- qb_win_perc %>%
mutate(color = case_when(
qb_name == "Matthew Stafford" ~ "navy",
qb_name == "Jared Goff" ~ "#FFA300",
TRUE ~ "gray"
))
qb_win_perc %>%
ggplot(aes(x = avg_total_help, y = win_perc)) +
geom_point(aes(fill = color), color = "black", shape = 21, size = 5) +
scale_color_identity(aesthetics = c("fill", "color")) +
geom_smooth(method = "lm", color = "black", alpha = 0.6, se = FALSE) +
ggrepel::geom_text_repel(aes(label = qb_name), size = 5, box.padding = 0.3) +
theme_reach() +
labs(x = "Average Total Help (Rush EPA/Play + Defensive EPA/Play)",
y = "Quarterback's Win Percentage",
title = "How Much Help Each Quarterback Has Gotten and How Often They Win",
subtitle = "2009-2020, total help doesn't account for pass blocking and receiving play but only rushing and defense",
caption = "By Tej Seth | @mfbanalytics")
install.packages('ggreach')
# install.packages("devtools")
devtools::install_github("zackarno/ggreach")
install.packages('devtools')
# install.packages("devtools")
devtools::install_github("zackarno/ggreach")
library(ggreach)
qb_win_perc %>%
ggplot(aes(x = avg_total_help, y = win_perc)) +
geom_point(aes(fill = color), color = "black", shape = 21, size = 5) +
scale_color_identity(aesthetics = c("fill", "color")) +
geom_smooth(method = "lm", color = "black", alpha = 0.6, se = FALSE) +
ggrepel::geom_text_repel(aes(label = qb_name), size = 5, box.padding = 0.3) +
theme_reach() +
labs(x = "Average Total Help (Rush EPA/Play + Defensive EPA/Play)",
y = "Quarterback's Win Percentage",
title = "How Much Help Each Quarterback Has Gotten and How Often They Win",
subtitle = "2009-2020, total help doesn't account for pass blocking and receiving play but only rushing and defense",
caption = "By Tej Seth | @mfbanalytics")
games <- games %>%
filter(season >= 2009) %>%
mutate(home_wins = case_when(
home_score > away_score ~ 1,
home_score == away_score ~ 0.5,
home_score < away_score ~ 0
),
away_wins = 1 - home_wins)
home_qbs <- games %>%
select(game_id, season, week, home_qb_name, home_team, home_wins) %>%
rename(qb_name = home_qb_name,
wins = home_wins,
team = home_team)
away_qbs <- games %>%
select(game_id, season, week, away_qb_name, away_team, away_wins) %>%
rename(qb_name = away_qb_name,
wins = away_wins,
team = away_team)
all_qbs <- rbind(home_qbs, away_qbs)
qb_win_perc <- all_qbs %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(games = n(),
win_perc = mean(wins)) %>%
filter(games >= 50) %>%
arrange(-win_perc)
rushing_stats <- pbp %>%
filter(rush == 1) %>%
group_by(game_id, posteam) %>%
summarize(rush_epa = mean(epa))
def_stats <- pbp %>%
group_by(game_id, defteam) %>%
summarize(def_epa = mean(epa))
all_stats <- rushing_stats %>%
left_join(def_stats, by = c("game_id", "posteam" = "defteam"))
all_stats <- all_stats %>%
mutate(total_help = rush_epa - def_epa) %>%
left_join(all_qbs, by = c("game_id", "posteam" = "team"))
total_help_stats <- all_stats %>%
filter(!is.na(total_help)) %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(avg_total_help = mean(total_help, na.rm = T))
qb_win_perc <- qb_win_perc %>%
left_join(total_help_stats, by = c("qb_name"))
qb_win_perc <- qb_win_perc %>%
mutate(color = case_when(
qb_name == "Matthew Stafford" ~ "navy",
qb_name == "Jared Goff" ~ "#FFA300",
TRUE ~ "gray"
))
qb_win_perc %>%
ggplot(aes(x = avg_total_help, y = win_perc)) +
geom_point(aes(fill = color), color = "black", shape = 21, size = 5) +
scale_color_identity(aesthetics = c("fill", "color")) +
geom_smooth(method = "lm", color = "black", alpha = 0.6, se = FALSE) +
ggrepel::geom_text_repel(aes(label = qb_name), size = 5, box.padding = 0.3) +
#theme_reach() +
labs(x = "Average Total Help (Rush EPA/Play + Defensive EPA/Play)",
y = "Quarterback's Win Percentage",
title = "How Much Help Each Quarterback Has Gotten and How Often They Win",
subtitle = "2009-2020, total help doesn't account for pass blocking and receiving play but only rushing and defense",
caption = "By Tej Seth | @mfbanalytics")
#ggsave('stafford-goff.png', width = 15, height = 10, dpi = "retina")
library(tidyverse)
library(nflfastR)
library(ggthemes)
theme_reach <- function() {
theme_fivethirtyeight() +
theme(
legend.position = "none",
plot.title = element_text(size = 20, hjust = 0.5, face = "bold"),
plot.subtitle = element_text(size = 13, hjust = 0.5),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.text = element_text(size = 12)
)
}
pbp <- nflfastR::load_pbp(2020)
pbp
pbp_p <- pbp %>%
filter(qb_dropback == 1) %>%
filter(!is.na(epa)) %>%
group_by(passer) %>%
mutate(total_passes = n()) %>%
ungroup() %>%
filter(total_passes >= 200)
pbp_p$dropback_num <- ave(pbp_p$epa, pbp_p$passer, FUN = seq_along)
pbp_p$csum <- ave(pbp_p$epa, pbp_p$passer, FUN=cumsum)
brady <- pbp_p %>%
filter(passer == "T.Brady")
pbp_p %>%
ggplot(aes(x = dropback_num, y = csum)) +
geom_smooth(aes(group = passer), color = "gray", se = FALSE, size = 1.5) +
geom_smooth(data = brady, aes(group = passer), color = "#d50a0a", se = FALSE, size = 4) +
theme_reach() +
geom_vline(xintercept = 362, linetype = "dashed") +
labs(x = "Dropback Number",
y = "Cumulative EPA",
title = "Brady's Cumulative EPA Peaked Towards the End of the Season",
subtitle = "All other passers with at least 200 dropbacks in gray",
caption = "By Tej Sethh | @mfbanaltyics | nflfastR") +
annotate("text", x = 350, y = 180, label = "Antonio Brown joins", size = 5, angle = 90)
#ggsave('brady-jump.png', width = 15, height = 10, dpi = "retina")
games <- games %>%
filter(season >= 2009) %>%
mutate(home_wins = case_when(
home_score > away_score ~ 1,
home_score == away_score ~ 0.5,
home_score < away_score ~ 0
),
away_wins = 1 - home_wins)
home_qbs <- games %>%
select(game_id, season, week, home_qb_name, home_team, home_wins) %>%
rename(qb_name = home_qb_name,
wins = home_wins,
team = home_team)
away_qbs <- games %>%
select(game_id, season, week, away_qb_name, away_team, away_wins) %>%
rename(qb_name = away_qb_name,
wins = away_wins,
team = away_team)
all_qbs <- rbind(home_qbs, away_qbs)
qb_win_perc <- all_qbs %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(games = n(),
win_perc = mean(wins)) %>%
filter(games >= 50) %>%
arrange(-win_perc)
rushing_stats <- pbp %>%
filter(rush == 1) %>%
group_by(game_id, posteam) %>%
summarize(rush_epa = mean(epa))
def_stats <- pbp %>%
group_by(game_id, defteam) %>%
summarize(def_epa = mean(epa))
all_stats <- rushing_stats %>%
left_join(def_stats, by = c("game_id", "posteam" = "defteam"))
all_stats <- all_stats %>%
mutate(total_help = rush_epa - def_epa) %>%
left_join(all_qbs, by = c("game_id", "posteam" = "team"))
total_help_stats <- all_stats %>%
filter(!is.na(total_help)) %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(avg_total_help = mean(total_help, na.rm = T))
qb_win_perc <- qb_win_perc %>%
left_join(total_help_stats, by = c("qb_name"))
qb_win_perc <- qb_win_perc %>%
mutate(color = case_when(
qb_name == "Matthew Stafford" ~ "navy",
qb_name == "Jared Goff" ~ "#FFA300",
TRUE ~ "gray"
))
qb_win_perc %>%
ggplot(aes(x = avg_total_help, y = win_perc)) +
geom_point(aes(fill = color), color = "black", shape = 21, size = 5) +
scale_color_identity(aesthetics = c("fill", "color")) +
geom_smooth(method = "lm", color = "black", alpha = 0.6, se = FALSE) +
ggrepel::geom_text_repel(aes(label = qb_name), size = 5, box.padding = 0.3) +
#theme_reach() +
labs(x = "Average Total Help (Rush EPA/Play + Defensive EPA/Play)",
y = "Quarterback's Win Percentage",
title = "How Much Help Each Quarterback Has Gotten and How Often They Win",
subtitle = "2009-2020, total help doesn't account for pass blocking and receiving play but only rushing and defense",
caption = "By Tej Seth | @mfbanalytics")
#ggsave('stafford-goff.png', width = 15, height = 10, dpi = "retina")
games <- games %>%
filter(season >= 2009) %>%
mutate(home_wins = case_when(
home_score > away_score ~ 1,
home_score == away_score ~ 0.5,
home_score < away_score ~ 0
),
away_wins = 1 - home_wins)
home_qbs <- games %>%
select(game_id, season, week, home_qb_name, home_team, home_wins) %>%
rename(qb_name = home_qb_name,
wins = home_wins,
team = home_team)
away_qbs <- games %>%
select(game_id, season, week, away_qb_name, away_team, away_wins) %>%
rename(qb_name = away_qb_name,
wins = away_wins,
team = away_team)
all_qbs <- rbind(home_qbs, away_qbs)
qb_win_perc <- all_qbs %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(games = n(),
win_perc = mean(wins)) %>%
filter(games >= 50) %>%
arrange(-win_perc)
rushing_stats <- pbp %>%
filter(rush == 1) %>%
group_by(game_id, posteam) %>%
summarize(rush_epa = mean(epa))
def_stats <- pbp %>%
group_by(game_id, defteam) %>%
summarize(def_epa = mean(epa))
all_stats <- rushing_stats %>%
left_join(def_stats, by = c("game_id", "posteam" = "defteam"))
all_stats <- all_stats %>%
mutate(total_help = rush_epa - def_epa) %>%
left_join(all_qbs, by = c("game_id", "posteam" = "team"))
total_help_stats <- all_stats %>%
filter(!is.na(total_help)) %>%
filter(!is.na(qb_name)) %>%
group_by(qb_name) %>%
summarize(avg_total_help = mean(total_help, na.rm = T))
qb_win_perc <- qb_win_perc %>%
left_join(total_help_stats, by = c("qb_name"))
qb_win_perc <- qb_win_perc %>%
mutate(color = case_when(
qb_name == "Matthew Stafford" ~ "navy",
qb_name == "Jared Goff" ~ "#FFA300",
TRUE ~ "gray"
))
qb_win_perc %>%
ggplot(aes(x = avg_total_help, y = win_perc)) +
geom_point(aes(fill = color), color = "black", shape = 21, size = 5) +
scale_color_identity(aesthetics = c("fill", "color")) +
geom_smooth(method = "lm", color = "black", alpha = 0.6, se = FALSE) +
ggrepel::geom_text_repel(aes(label = qb_name), size = 5, box.padding = 0.3) +
theme_reach() +
labs(x = "Average Total Help (Rush EPA/Play + Defensive EPA/Play)",
y = "Quarterback's Win Percentage",
title = "How Much Help Each Quarterback Has Gotten and How Often They Win",
subtitle = "2009-2020, total help doesn't account for pass blocking and receiving play but only rushing and defense",
caption = "By Tej Seth | @mfbanalytics")
#ggsave('stafford-goff.png', width = 15, height = 10, dpi = "retina")
pbp_p <- pbp %>%
filter(qb_dropback == 1) %>%
filter(!is.na(epa)) %>%
group_by(passer) %>%
mutate(total_passes = n()) %>%
ungroup() %>%
filter(total_passes >= 200)
pbp_p$dropback_num <- ave(pbp_p$epa, pbp_p$passer, FUN = seq_along)
pbp_p$csum <- ave(pbp_p$epa, pbp_p$passer, FUN=cumsum)
brady <- pbp_p %>%
filter(passer == "T.Brady")
pbp_p %>%
ggplot(aes(x = dropback_num, y = csum)) +
geom_smooth(aes(group = passer), color = "gray", se = FALSE, size = 1.5) +
geom_smooth(data = brady, aes(group = passer), color = "#d50a0a", se = FALSE, size = 4) +
#theme_reach() +
geom_vline(xintercept = 362, linetype = "dashed") +
labs(x = "Dropback Number",
y = "Cumulative EPA",
title = "Brady's Cumulative EPA Peaked Towards the End of the Season",
subtitle = "All other passers with at least 200 dropbacks in gray",
caption = "By Tej Sethh | @mfbanaltyics | nflfastR") +
annotate("text", x = 350, y = 180, label = "Antonio Brown joins", size = 5, angle = 90)
#ggsave('brady-jump.png', width = 15, height = 10, dpi = "retina")
